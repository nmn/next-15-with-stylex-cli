import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

import * as stylex from "@stylexjs/stylex";
import { colors } from "./tokens.stylex";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--geist-sans",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--geist-mono",
});

export const metadata: Metadata = {
  title: "Create Next App with StyleX CLI",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html {...stylex.props(styles.base, styles.html)} lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${
          stylex.props(styles.base, styles.body).className
        }`}
      >
        {children}
      </body>
    </html>
  );
}

const styles = stylex.create({
  base: {
    maxWidth: "100vw",
    overflowX: "hidden",
  },
  html: {
    colorScheme: "light dark",
  },
  body: {
    color: colors.fg,
    backgroundColor: colors.bg,
  },
});
